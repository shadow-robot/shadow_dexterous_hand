version: 0.2

env:
  variables:
     release_branch: noetic-devel
     release_tag_flavour: noetic
     release_tag_version: 0.0.0
  parameter-store:
     GITHUB_LOGIN : GITHUB_LOGIN
     GITHUB_PASSWORD : GITHUB_PASSWORD
     DOCKER_HUB_USERNAME: DOCKER_HUB_USERNAME
     DOCKER_HUB_PASSWORD: DOCKER_HUB_PASSWORD
  exported-variables:
     - release_branch
     - release_tag_flavour
     - release_tag_version
phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - awscli_v1_executable=$(which aws)
      - rm $awscli_v1_executable
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - ./aws/install
      - git checkout $release_branch
      - echo "Setting up the nginx server"
      - echo AWS_CONTAINER_CREDENTIALS_RELATIVE_URI=$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI >> AWS_CRED
      - echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> AWS_CRED
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/shadowrobot
      - docker run --name=nginx-ssh -d -v $CODEBUILD_SRC_DIR:/usr/share/nginx/html -p 8008:80 public.ecr.aws/shadowrobot/nginx:latest
      - docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}
      - cd $(find . -name scripts)
      - if [ "$release_tag_version" = "0.0.0" ]; then release_tag_version=$(./next-version.sh -f ${release_tag_flavour}); fi
      - if [ "$release_tag_version" != "night-build" ]; then ./check-tag.sh -f $release_tag_flavour -v $release_tag_version; fi
  build:
    commands:
      - ./system-test.sh
  post_build:
    commands:
      - echo "Killing nginx server..."
      - docker stop nginx-ssh && docker rm nginx-ssh
      - echo "Cleaning up untagged images"
      - ./remove_untagged_containers.py
